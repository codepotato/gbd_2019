#            y = Seven_day_sum_dose_1,
#            group = Age_group,
#            colour = Age_group)) +
#   geom_line_interactive(aes(tooltip = paste0(Age_group),
#                             data_id = paste0(Age_group)),
#                         size = .9) +
#   ph_theme() +
#   theme(axis.text.x = element_text(angle = 90, size = 6)) +
#   scale_y_continuous(labels = label_comma(accuracy = 1)) +
#   scale_x_date(date_labels = "%b %d",
#                breaks = seq.Date(max(vaccine_ts_age_df_x$Date) -(52*14), max(vaccine_ts_age_df_x$Date), by = 7),
#                limits = c(min(vaccine_ts_age_df_x$Date), max(vaccine_ts_age_df_x$Date)),
#                expand = c(0.01,1)) +
#   # scale_colour_manual(values = age_colours,
#   #                     name = 'Age') +
#   labs(x = 'Date of administration',
#        y = 'Number of first dose\nvaccinations in previous 7 days',
#        title = paste0('Rolling 7 day sum of first dose Covid-19 vaccinations; ', 'West Sussex'),
#        subtitle = paste0('Vaccinations administered to patients registered to addresses in ', 'West Sussex', '; as at ', format(last_date, '%d %B')))  +
#   theme(axis.text.x = element_text(size = 8))
#
# ggplot(data = vaccine_ts_age_df_x,
#        aes(x = Date,
#            y = Rolling_age_specific_first_dose_rate_per_100000,
#            group = Age_group,
#            colour = Age_group)) +
#   geom_line_interactive(aes(tooltip = paste0(Age_group),
#                             data_id = paste0(Age_group)),
#                         size = .9) +
#   ph_theme() +
#   theme(axis.text.x = element_text(angle = 90, size = 6)) +
#   scale_y_continuous(labels = label_comma(accuracy = 1)) +
#   scale_x_date(date_labels = "%b %d",
#                breaks = seq.Date(max(vaccine_ts_age_df_x$Date) -(52*14), max(vaccine_ts_age_df_x$Date), by = 7),
#                limits = c(min(vaccine_ts_age_df_x$Date), max(vaccine_ts_age_df_x$Date)),
#                expand = c(0.01,1)) +
#   # scale_colour_manual(values = age_colours,
#   #                     name = 'Age') +
#   labs(x = 'Date of administration',
#        y = 'Rate of first dose\nvaccinations per 100,000 population\nin previous 7 days',
#        title = paste0('Rolling 7 day rate per 100,000 population of first dose Covid-19 vaccinations; ', 'West Sussex'),
#        subtitle = paste0('Vaccinations administered to patients registered to addresses in ', 'West Sussex', '; as at ', format(last_date, '%d %B')))  +
#   theme(axis.text.x = element_text(size = 8))
#
# ggplot(data = vaccine_ts_age_df_x,
#        aes(x = Date,
#            y = Seven_day_sum_dose_2,
#            group = Age_group,
#            colour = Age_group)) +
#   geom_line_interactive(aes(tooltip = paste0(Age_group),
#                             data_id = paste0(Age_group)),
#                         size = .9) +
#   ph_theme() +
#   theme(axis.text.x = element_text(angle = 90, size = 6)) +
#   scale_y_continuous(labels = label_comma(accuracy = 1)) +
#   scale_x_date(date_labels = "%b %d",
#                breaks = seq.Date(max(vaccine_ts_age_df_x$Date) -(52*14), max(vaccine_ts_age_df_x$Date), by = 7),
#                limits = c(min(vaccine_ts_age_df_x$Date), max(vaccine_ts_age_df_x$Date)),
#                expand = c(0.01,1)) +
#   # scale_colour_manual(values = age_colours,
#   #                     name = 'Age') +
#   labs(x = 'Date of administration',
#        y = 'Number of first dose\nvaccinations in previous 7 days',
#        title = paste0('Rolling 7 day sum of first dose Covid-19 vaccinations; ', 'West Sussex'),
#        subtitle = paste0('Vaccinations administered to patients registered to addresses in ', 'West Sussex', '; as at ', format(last_date, '%d %B')))  +
#   theme(axis.text.x = element_text(size = 8))
#
# ggplot(data = vaccine_ts_age_df_x,
#        aes(x = Date,
#            y = Rolling_age_specific_second_dose_rate_per_100000,
#            group = Age_group,
#            colour = Age_group)) +
#   geom_line_interactive(aes(tooltip = paste0(Age_group),
#                             data_id = paste0(Age_group)),
#                         size = .9) +
#   ph_theme() +
#   theme(axis.text.x = element_text(angle = 90, size = 6)) +
#   scale_y_continuous(labels = label_comma(accuracy = 1)) +
#   scale_x_date(date_labels = "%b %d",
#                breaks = seq.Date(max(vaccine_ts_age_df_x$Date) -(52*14), max(vaccine_ts_age_df_x$Date), by = 7),
#                limits = c(min(vaccine_ts_age_df_x$Date), max(vaccine_ts_age_df_x$Date)),
#                expand = c(0.01,1)) +
#   # scale_colour_manual(values = age_colours,
#   #                     name = 'Age') +
#   labs(x = 'Date of administration',
#        y = 'Rate of first dose\nvaccinations per 100,000 population\nin previous 7 days',
#        title = paste0('Rolling 7 day rate per 100,000 population of first dose Covid-19 vaccinations; ', 'West Sussex'),
#        subtitle = paste0('Vaccinations administered to patients registered to addresses in ', 'West Sussex', '; as at ', format(last_date, '%d %B')))  +
#   theme(axis.text.x = element_text(size = 8))
read_csv(paste0(github_repo_dir, '/Source files/jcvi_dates.csv'),
col_types = cols(Opening_date = col_date(format = "%d/%m/%Y"))) %>%
mutate(Date_label = format(Opening_date, '%d %b %y')) %>%
filter(!is.na(Date_label)) %>%
toJSON() %>%
write_lines(paste0(output_directory_x,'/jcvi_cohort_key_dates.json'))
# Week by week change ####
set_week_start('Monday')
# Create a dataframe consisting of 52 rows (one for each week) with the field 'Week_start' as the date of the start of each week. Add a number corresponding to the week number, create a string called match_key (which we will use to match the filepath to the week) and then a formatted label for the dates included in the week.
week_starting_a <- data.frame(Week_start = get_date(week = 1:53, year = 2020)) %>%
mutate(Week_number = paste0(row_number(), ' - 2020'))
week_starting_b <- data.frame(Week_start = get_date(week = 1:52, year = 2021)) %>%
mutate(Week_number = paste0(row_number(), ' - 2021'))
week_start_vac <- week_starting_a %>%
bind_rows(week_starting_b) %>%
mutate(Week_range_label = paste0(format(Week_start, '%d %b'), ' to ', format(Week_start + 6, '%d %b %Y'))) %>%
mutate(Week_number = factor(Week_number, levels = c("1 - 2020", "2 - 2020",  "3 - 2020", "4 - 2020",  "5 - 2020",  "6 - 2020",  "7 - 2020",  "8 - 2020",  "9 - 2020",  "10 - 2020", "11 - 2020", "12 - 2020", "13 - 2020", "14 - 2020", "15 - 2020", "16 - 2020", "17 - 2020", "18 - 2020", "19 - 2020", "20 - 2020", "21 - 2020", "22 - 2020", "23 - 2020", "24 - 2020", "25 - 2020", "26 - 2020", "27 - 2020", "28 - 2020", "29 - 2020", "30 - 2020", "31 - 2020", "32 - 2020", "33 - 2020", "34 - 2020", "35 - 2020", "36 - 2020", "37 - 2020", "38 - 2020", "39 - 2020", "40 - 2020", "41 - 2020", "42 - 2020", "43 - 2020", "44 - 2020", "45 - 2020", "46 - 2020", "47 - 2020", "48 - 2020", "49 - 2020", "50 - 2020", "51 - 2020", "52 - 2020", "53 - 2020", "1 - 2021", "2 - 2021", "3 - 2021", "4 - 2021",  "5 - 2021",  "6 - 2021",  "7 - 2021", "8 - 2021",  "9 - 2021",  "10 - 2021", "11 - 2021", "12 - 2021", "13 - 2021", "14 - 2021", "15 - 2021", "16 - 2021", "17 - 2021", "18 - 2021", "19 - 2021", "20 - 2021", "21 - 2021", "22 - 2021", "23 - 2021", "24 - 2021", "25 - 2021", "26 - 2021", "27 - 2021", "28 - 2021", "29 - 2021", "30 - 2021", "31 - 2021", "32 - 2021", "33 - 2021", "34 - 2021", "35 - 2021", "36 - 2021", "37 - 2021", "38 - 2021", "39 - 2021", "40 - 2021", "41 - 2021", "42 - 2021", "43 - 2021", "44 - 2021", "45 - 2021", "46 - 2021", "47 - 2021", "48 - 2021", "49 - 2021", "50 - 2021", "51 - 2021", "52 - 2021"))) %>%
mutate(week_id = row_number())
rm(week_starting_a, week_starting_b)
all_age_vac <- vaccine_ts_df %>%
mutate(Age_group = '12 and over') %>%
bind_rows(vaccine_age_df) %>%
select(!c(cumVaccinationFirstDoseUptakeByVaccinationDatePercentage,cumVaccinationCompleteCoverageByVaccinationDatePercentage,cumVaccinationSecondDoseUptakeByVaccinationDatePercentage)) %>%
mutate(Week_number = paste0(date2week(Date, numeric = TRUE), ifelse(Date < '2021-01-04', ' - 2020', ' - 2021' ))) %>%
left_join(week_start_vac, by = 'Week_number') %>%
mutate(Week_number = factor(Week_number, levels = c("1 - 2020", "2 - 2020",  "3 - 2020", "4 - 2020",  "5 - 2020",  "6 - 2020",  "7 - 2020",  "8 - 2020",  "9 - 2020",  "10 - 2020", "11 - 2020", "12 - 2020", "13 - 2020", "14 - 2020", "15 - 2020", "16 - 2020", "17 - 2020", "18 - 2020", "19 - 2020", "20 - 2020", "21 - 2020", "22 - 2020", "23 - 2020", "24 - 2020", "25 - 2020", "26 - 2020", "27 - 2020", "28 - 2020", "29 - 2020", "30 - 2020", "31 - 2020", "32 - 2020", "33 - 2020", "34 - 2020", "35 - 2020", "36 - 2020", "37 - 2020", "38 - 2020", "39 - 2020", "40 - 2020", "41 - 2020", "42 - 2020", "43 - 2020", "44 - 2020", "45 - 2020", "46 - 2020", "47 - 2020", "48 - 2020", "49 - 2020", "50 - 2020", "51 - 2020", "52 - 2020", "53 - 2020", "1 - 2021", "2 - 2021", "3 - 2021", "4 - 2021",  "5 - 2021",  "6 - 2021",  "7 - 2021", "8 - 2021",  "9 - 2021",  "10 - 2021", "11 - 2021", "12 - 2021", "13 - 2021", "14 - 2021", "15 - 2021", "16 - 2021", "17 - 2021", "18 - 2021", "19 - 2021", "20 - 2021", "21 - 2021", "22 - 2021", "23 - 2021", "24 - 2021", "25 - 2021", "26 - 2021", "27 - 2021", "28 - 2021", "29 - 2021", "30 - 2021", "31 - 2021", "32 - 2021", "33 - 2021", "34 - 2021", "35 - 2021", "36 - 2021", "37 - 2021", "38 - 2021", "39 - 2021", "40 - 2021", "41 - 2021", "42 - 2021", "43 - 2021", "44 - 2021", "45 - 2021", "46 - 2021", "47 - 2021", "48 - 2021", "49 - 2021", "50 - 2021", "51 - 2021", "52 - 2021"))) %>%
mutate(Age_group = ifelse(Age_group %in% c('60-64 years','65-69 years','70-74 years','75-79 years','80-84 years','85-89 years','90+ years'), '60+ years', Age_group)) %>%
group_by(Name, Age_group, Week_number, Week_start, Week_range_label) %>%
summarise(Dose_1 = sum(Dose_1, na.rm = TRUE),
Dose_2 = sum(Dose_2, na.rm = TRUE)) %>%
ungroup()
week_x <- ifelse(paste0(date2week(last_date, numeric = TRUE)-1, ifelse(last_date < '2021-01-04', ' - 2020', ' - 2021')) == '0 - 2021', '53 - 2020', paste0(date2week(last_date, numeric = TRUE)-1, ifelse(last_date < '2021-01-04', ' - 2020', ' - 2021')))
date_weeks_x <- week_start_vac %>%
filter(Week_number == week_x)
weeks_to_keep <- week_start_vac %>%
filter(Week_start <= date_weeks_x$Week_start) %>%
arrange(desc(Week_number)) %>%
filter(week_id %in% seq(date_weeks_x$week_id - 2, date_weeks_x$week_id, 1)) %>%
arrange(week_id)
wsx_wk_by_wk_1 <- all_age_vac %>%
filter(Week_number %in% weeks_to_keep$Week_number) %>%
select(Name, Age_group, Week_range_label, Dose_1) %>%
mutate(Week_range_label = paste0('1st doses ', Week_range_label)) %>%
pivot_wider(names_from = Week_range_label,
values_from = Dose_1)
wsx_wk_by_wk_2 <- all_age_vac %>%
filter(Week_number %in% weeks_to_keep$Week_number) %>%
select(Name, Age_group, Week_range_label, Dose_2) %>%
mutate(Week_range_label = paste0('2nd doses ', Week_range_label)) %>%
pivot_wider(names_from = Week_range_label,
values_from = Dose_2)
wsx_wk_by_wk <- wsx_wk_by_wk_1 %>%
left_join(wsx_wk_by_wk_2,  by = c('Name', 'Age_group')) %>%
mutate(Age_group = factor(Age_group, levels = c('12 and over','12-15 years','16-17 years','18-24 years','25-29 years','30-34 years','35-39 years','40-44 years','45-49 years','50-54 years','55-59 years','60+ years'))) %>%
arrange(Name, desc(Age_group))
wsx_wk_by_wk %>%
names() %>%
toJSON() %>%
write_lines(paste0(output_directory_x, '/vaccine_wk_by_wk_age_headings.json'))
wsx_wk_by_wk %>%
rename(Age_group = 2) %>%
rename(First_dose_week_minus_3 = 3) %>%
rename(First_dose_week_minus_2 = 4) %>%
rename(First_dose_week_minus_1 = 5) %>%
rename(Second_dose_week_minus_3 = 6) %>%
rename(Second_dose_week_minus_2 = 7) %>%
rename(Second_dose_week_minus_1 = 8) %>%
mutate(Label = paste0(Name, Age_group)) %>%
toJSON() %>%
write_lines(paste0(output_directory_x, '/vaccine_wk_by_wk_age.json'))
age_denominators_1 <- vaccine_age_df %>%
filter(Date == max(Date)) %>%
select(Name, Age_group, Denominator)
age_denominators_2 <- age_denominators_1 %>%
group_by(Name) %>%
summarise(Denominator = sum(Denominator, na.rm = TRUE)) %>%
mutate(Age_group = '12 and over')
age_denominators <- age_denominators_1 %>%
bind_rows(age_denominators_2)
# cumulative timeseries by age ####
cumulative_vac <- vaccine_ts_df %>%
mutate(Age_group = '12 and over') %>%
bind_rows(vaccine_age_df) %>%
mutate(Age_group = factor(Age_group, levels = c('12 and over', '12-15 years','16-17 years',"18-24 years", "25-29 years", "30-34 years", "35-39 years", "40-44 years", "45-49 years", "50-54 years", "55-59 years", "60-64 years", "65-69 years", "70-74 years", "75-79 years", "80-84 years", "85-89 years", "90+ years"))) %>%
mutate(Date_label = format(Date, '%d %b %y'))
cumulative_vac %>%
filter(Date == max(Date)) %>%
select(Name, Age_group, Denominator) %>%
unique() %>%
toJSON() %>%
write_lines(paste0(output_directory_x, '/vaccine_age_denominators.json'))
cumulative_vac %>%
select(Name, Age_group, Date_label, Cumulative_dose_1, Cumulative_dose_2) %>%
toJSON() %>%
write_lines(paste0(output_directory_x, '/cumulative_vaccine_age_data.json'))
# Week by week percentage
weekly_prop_df <- vaccine_ts_df %>%
mutate(Age_group = '12 and over') %>%
bind_rows(vaccine_age_df) %>%
select(!c(cumVaccinationFirstDoseUptakeByVaccinationDatePercentage,cumVaccinationCompleteCoverageByVaccinationDatePercentage,cumVaccinationSecondDoseUptakeByVaccinationDatePercentage)) %>%
mutate(Week_number = paste0(date2week(Date, numeric = TRUE), ifelse(Date < '2021-01-04', ' - 2020', ' - 2021' ))) %>%
left_join(week_start_vac, by = 'Week_number') %>%
mutate(Week_number = factor(Week_number, levels = c("1 - 2020", "2 - 2020",  "3 - 2020", "4 - 2020",  "5 - 2020",  "6 - 2020",  "7 - 2020",  "8 - 2020",  "9 - 2020",  "10 - 2020", "11 - 2020", "12 - 2020", "13 - 2020", "14 - 2020", "15 - 2020", "16 - 2020", "17 - 2020", "18 - 2020", "19 - 2020", "20 - 2020", "21 - 2020", "22 - 2020", "23 - 2020", "24 - 2020", "25 - 2020", "26 - 2020", "27 - 2020", "28 - 2020", "29 - 2020", "30 - 2020", "31 - 2020", "32 - 2020", "33 - 2020", "34 - 2020", "35 - 2020", "36 - 2020", "37 - 2020", "38 - 2020", "39 - 2020", "40 - 2020", "41 - 2020", "42 - 2020", "43 - 2020", "44 - 2020", "45 - 2020", "46 - 2020", "47 - 2020", "48 - 2020", "49 - 2020", "50 - 2020", "51 - 2020", "52 - 2020", "53 - 2020", "1 - 2021", "2 - 2021", "3 - 2021", "4 - 2021",  "5 - 2021",  "6 - 2021",  "7 - 2021", "8 - 2021",  "9 - 2021",  "10 - 2021", "11 - 2021", "12 - 2021", "13 - 2021", "14 - 2021", "15 - 2021", "16 - 2021", "17 - 2021", "18 - 2021", "19 - 2021", "20 - 2021", "21 - 2021", "22 - 2021", "23 - 2021", "24 - 2021", "25 - 2021", "26 - 2021", "27 - 2021", "28 - 2021", "29 - 2021", "30 - 2021", "31 - 2021", "32 - 2021", "33 - 2021", "34 - 2021", "35 - 2021", "36 - 2021", "37 - 2021", "38 - 2021", "39 - 2021", "40 - 2021", "41 - 2021", "42 - 2021", "43 - 2021", "44 - 2021", "45 - 2021", "46 - 2021", "47 - 2021", "48 - 2021", "49 - 2021", "50 - 2021", "51 - 2021", "52 - 2021"))) %>%
# mutate(Age_group = ifelse(Age_group %in% c('60-64 years','65-69 years','70-74 years','75-79 years','80-84 years','85-89 years','90+ years'), '60+ years', Age_group)) %>%
group_by(Name, Age_group, Week_number, Week_start, Week_range_label) %>%
summarise(Dose_1 = sum(Dose_1, na.rm = TRUE),
Dose_2 = sum(Dose_2, na.rm = TRUE)) %>%
ungroup() %>%
left_join(age_denominators, by = c('Name', 'Age_group')) %>%
mutate(Proportion_dose_1 = Dose_1 / Denominator) %>%
mutate(Proportion_dose_2 = Dose_2 / Denominator)
weekly_prop_1 <- weekly_prop_df %>%
mutate(Week_range_label = paste0('1st doses ', Week_range_label)) %>%
select(Name, Age_group, Week_range_label, Proportion_dose_1) %>%
pivot_wider(names_from = Week_range_label,
values_from = Proportion_dose_1) %>%
mutate(Dose = 'Dose 1')
weekly_prop_2 <- weekly_prop_df %>%
select(Name, Age_group, Week_range_label, Proportion_dose_2) %>%
mutate(Week_range_label = paste0('2nd doses ', Week_range_label)) %>%
pivot_wider(names_from = Week_range_label,
values_from = Proportion_dose_2) %>%
mutate(Dose = 'Dose 2')
wsx_wk_by_wk_prop <- weekly_prop_1 %>%
bind_rows(weekly_prop_2) %>%
mutate(Age_group = factor(Age_group, levels = c('12 and over','16-17 years', "18-24 years", "25-29 years", "30-34 years", "35-39 years", "40-44 years", "45-49 years", "50-54 years", "55-59 years", "60-64 years", "65-69 years", "70-74 years", "75-79 years", "80-84 years", "85-89 years", "90+ years"))) %>%
arrange(Name, desc(Age_group))
wsx_wk_by_wk_prop %>%
write.csv(., paste0(output_directory_x, '/weekly_doses_proportion.csv'), row.names = FALSE)
# recreating vaccine at a glance LTLA ####
latest_denominators_1 <- vaccine_age_df %>%
filter(Date == max(Date)) %>%
select(Name, Age_group, Denominator)
latest_denominators_2 <-  vaccine_age_df %>%
filter(Date == max(Date)) %>%
filter(Age_group %in% c('65-69 years','70-74 years','75-79 years','80-84 years','85-89 years','90+ years')) %>%
select(Name, Denominator) %>%
group_by(Name) %>%
summarise(Denominator = sum(Denominator, na.rm = TRUE)) %>%
mutate(Age_group = '65 and over') %>%
ungroup()
latest_denominators_3 <-  vaccine_age_df %>%
filter(Date == max(Date)) %>%
filter(Age_group %in% c('16-17 years',"18-24 years", "25-29 years", "30-34 years", "35-39 years", "40-44 years", "45-49 years", "50-54 years", "55-59 years",'60-64 years')) %>%
select(Name, Denominator) %>%
group_by(Name) %>%
summarise(Denominator = sum(Denominator, na.rm = TRUE)) %>%
mutate(Age_group = '16-64 years') %>%
ungroup()
latest_denominators <- latest_denominators_1 %>%
group_by(Name) %>%
summarise(Denominator = sum(Denominator, na.rm = TRUE)) %>%
mutate(Age_group = '12 and over') %>%
ungroup() %>%
bind_rows(latest_denominators_1) %>%
bind_rows(latest_denominators_2) %>%
bind_rows(latest_denominators_3)
vaccine_df_ltla_1 <- vaccine_age_df %>%
group_by(Name, Age_group) %>%
summarise(Dose_1 = sum(Dose_1, na.rm = TRUE),
Dose_2 = sum(Dose_2, na.rm = TRUE)) %>%
left_join(latest_denominators, by = c('Name', 'Age_group'))
vaccine_df_ltla_2 <- vaccine_age_df %>%
filter(Age_group %in% c('65-69 years','70-74 years','75-79 years','80-84 years','85-89 years','90+ years')) %>%
group_by(Name) %>%
summarise(Dose_1 = sum(Dose_1, na.rm = TRUE),
Dose_2 = sum(Dose_2, na.rm = TRUE)) %>%
mutate(Age_group = '65 and over') %>%
left_join(latest_denominators, by = c('Name', 'Age_group'))
vaccine_df_ltla_3 <- vaccine_age_df %>%
filter(Age_group %in% c('16-17 years',"18-24 years", "25-29 years", "30-34 years", "35-39 years", "40-44 years", "45-49 years", "50-54 years", "55-59 years",'60-64 years')) %>%
group_by(Name) %>%
summarise(Dose_1 = sum(Dose_1, na.rm = TRUE),
Dose_2 = sum(Dose_2, na.rm = TRUE)) %>%
mutate(Age_group = '16-64 years') %>%
left_join(latest_denominators, by = c('Name', 'Age_group'))
vaccine_df_ltla_4 <- vaccine_age_df %>%
group_by(Name) %>%
summarise(Dose_1 = sum(Dose_1, na.rm = TRUE),
Dose_2 = sum(Dose_2, na.rm = TRUE)) %>%
mutate(Age_group = '12 and over') %>%
left_join(latest_denominators, by = c('Name', 'Age_group'))
vaccine_df_ltla <- vaccine_df_ltla_2 %>%
bind_rows(vaccine_df_ltla_3) %>%
bind_rows(vaccine_df_ltla_4) %>%
mutate(Proportion_dose_1 = Dose_1 / Denominator)
vaccine_df_ltla_pt_1 <- vaccine_df_ltla%>%
select(Name, Dose_1, Age_group) %>%
mutate(Age_group = factor(Age_group, levels = c('12 and over', '16-64 years', '65 and over'))) %>%
arrange(Age_group) %>%
mutate(label = paste0('Number of individuals aged ', Age_group)) %>%
select(!Age_group) %>%
pivot_wider(names_from = label,
values_from = Dose_1)
vaccine_df_ltla_pt_2 <- vaccine_df_ltla%>%
select(Name, Proportion_dose_1, Age_group) %>%
mutate(Age_group = factor(Age_group, levels = c('12 and over', '16-64 years', '65 and over'))) %>%
arrange(Age_group) %>%
mutate(label = paste0('Proportion (', Age_group, ')')) %>%
select(!Age_group) %>%
pivot_wider(names_from = label,
values_from = Proportion_dose_1)
vaccine_df_ltla_pt_1 %>%
left_join(vaccine_df_ltla_pt_2, by = 'Name') %>%
select(Name, `Number of individuals aged 12 and over`, `Proportion (12 and over)`, `Number of individuals aged 16-64 years`, `Proportion (16-64 years)`, `Number of individuals aged 65 and over`, `Proportion (65 and over)`) %>%
mutate(Name = factor(Name, levels = c('Adur' ,'Arun', 'Chichester', 'Crawley', 'Horsham', 'Mid Sussex', 'Worthing', 'West Sussex', 'South East', 'England'))) %>%
arrange(Name) %>%
toJSON() %>%
write_lines(paste0(output_directory_x, '/vaccine_at_a_glance.json'))
#
# vaccine_df_ltla %>%  toJSON() %>%
#   write_lines(paste0(mobile_output_directory_x, '/vaccine_at_a_glance.json'))
# vaccine_df_ltla_pt_1 %>%
#   left_join(vaccine_df_ltla_pt_2, by = 'Name') %>%
#   select(Name, `Number of individuals aged 18 and over`, `Proportion (18 and over)`, `Number of individuals aged 18-64 years`, `Proportion (18-64 years)`, `Number of individuals aged 65 and over`, `Proportion (65 and over)`) %>%
#   mutate(Name = factor(Name, levels = c('Adur' ,'Arun', 'Chichester', 'Crawley', 'Horsham', 'Mid Sussex', 'Worthing', 'West Sussex', 'South East', 'England'))) %>%
#   arrange(Name) %>%
#   toJSON() %>%
#   write_lines(paste0(mobile_output_directory_x, '/vaccine_at_a_glance.json'))
vaccine_df_ltla %>%
mutate(prop_dose_2 = Dose_2 / Denominator) %>%
filter(Age_group == '12 and over') %>%
view()
vaccine_age_df %>%
filter(Age_group == '16-17 years') %>%
filter(Date == max(Date)) %>%
select(Name, Cumulative_dose_1, Cumulative_dose_2, Denominator) %>%
mutate(prop_dose_1 = Cumulative_dose_1 / Denominator) %>%
mutate(prop_dose_2 = Cumulative_dose_2 / Denominator) %>%
view()
knitr::opts_knit$set(root.dir = '~/GitHub/gbd_2019/')
library(easypackages)
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "jsonlite"))
data_directory <- './Source_files/Raw'
output_directory <- './Outputs'
meta_directory <- './Source_files'
codebook <- read_csv(paste0(meta_directory,'/IHME_GBD_2019_CODEBOOK_Y2020M11D25.csv'))
cause_hierarchy <- read_excel(paste0(meta_directory, '/IHME_GBD_2019_CAUSE_HIERARCHY_Y2020M11D25.xlsx'))
le_wsx <- fromJSON(paste0(output_directory, '/le_wsx.json')) %>%
mutate(Sex = factor(Sex, levels = c('Male', 'Both', 'Female')))
le_wsx_gap <- le_wsx %>%
select(!Sub_optimal_health) %>%
pivot_longer(names_to = 'Measure',
cols = c('LE', 'HALE')) %>%
select(Name, Sex, Year, Measure, value) %>%
pivot_wider(names_from = 'Sex',
values_from = 'value') %>%
mutate(Sex_gap_female_minus_male = Female - Male) %>%
select(Name, Year, Measure, Sex_gap_female_minus_male) %>%
pivot_wider(names_from = 'Measure',
values_from = 'Sex_gap_female_minus_male')
wsx_compare <- fromJSON(paste0(output_directory, '/wsx_compare_df.json'))
wsx_ranks_compare <- fromJSON(paste0(output_directory, '/wsx_ranks_df.json'))
wsx_ranks_compare %>%
filter(sex == 'Both') %>%
mutate(Label = paste0(cause, ' ', format(round(`DALYs (Disability-Adjusted Life Years)_value`,1), big.mark = ',', trim = TRUE), ' DALYs (', format(round(Deaths_value, 0), big.mark = ',', trim = TRUE), ' deaths)')) %>%
filter(metric == 'Number') %>%
arrange(`DALYs (Disability-Adjusted Life Years)_rank`) %>%
view()
le_comp <- read_csv('https://raw.githubusercontent.com/psychty/gbd_2019/ecd33659ad73f41d90e9296cc3d55da3555e420d/Source_files/Raw/Life_expectancy_SE_2019.csv') %>%
filter(location %in% c('West Sussex','England','South East England')) %>%
filter(year == 2019) %>%
# filter(sex != 'Both') %>%
filter(age == '<1 year') %>%
select(sex, location, val) %>%
mutate(val = round(val, 1)) %>%
pivot_wider(values_from = val,
names_from = location)
hale_comp <- read_csv('https://raw.githubusercontent.com/psychty/gbd_2019/ecd33659ad73f41d90e9296cc3d55da3555e420d/Source_files/Raw/Health_Adjusted_Life_expectancy_SE_2019.csv') %>%
filter(location %in% c('West Sussex','England','South East England')) %>%
filter(year == 2019) %>%
# filter(sex != 'Both') %>%
filter(age == '<1 year') %>%
select(sex, location, val) %>%
mutate(val = round(val, 1)) %>%
pivot_wider(values_from = val,
names_from = location)
population_df <- fromJSON(paste0(output_directory, '/wsx_population.json'))
View(wsx_compare)
View(wsx_compare)
```{r data, echo=FALSE, include=FALSE}
library(easypackages)
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "jsonlite"))
data_directory <- './Source_files/Raw'
output_directory <- './Outputs'
meta_directory <- './Source_files'
codebook <- read_csv(paste0(meta_directory,'/IHME_GBD_2019_CODEBOOK_Y2020M11D25.csv'))
knitr::opts_knit$set(root.dir = '~/GitHub/gbd_2019/')
library(easypackages)
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "jsonlite"))
data_directory <- './Source_files/Raw'
output_directory <- './Outputs'
meta_directory <- './Source_files'
codebook <- read_csv(paste0(meta_directory,'/IHME_GBD_2019_CODEBOOK_Y2020M11D25.csv'))
cause_hierarchy <- read_excel(paste0(meta_directory, '/IHME_GBD_2019_CAUSE_HIERARCHY_Y2020M11D25.xlsx'))
le_wsx <- fromJSON(paste0(output_directory, '/le_wsx.json')) %>%
mutate(Sex = factor(Sex, levels = c('Male', 'Both', 'Female')))
le_wsx_gap <- le_wsx %>%
select(!Sub_optimal_health) %>%
pivot_longer(names_to = 'Measure',
cols = c('LE', 'HALE')) %>%
select(Name, Sex, Year, Measure, value) %>%
pivot_wider(names_from = 'Sex',
values_from = 'value') %>%
mutate(Sex_gap_female_minus_male = Female - Male) %>%
select(Name, Year, Measure, Sex_gap_female_minus_male) %>%
pivot_wider(names_from = 'Measure',
values_from = 'Sex_gap_female_minus_male')
wsx_compare <- fromJSON(paste0(output_directory, '/wsx_compare_df.json'))
wsx_ranks_compare <- fromJSON(paste0(output_directory, '/wsx_ranks_df.json'))
wsx_ranks_compare %>%
filter(sex == 'Both') %>%
mutate(Label = paste0(cause, ' ', format(round(`DALYs (Disability-Adjusted Life Years)_value`,1), big.mark = ',', trim = TRUE), ' DALYs (', format(round(Deaths_value, 0), big.mark = ',', trim = TRUE), ' deaths)')) %>%
filter(metric == 'Number') %>%
arrange(`DALYs (Disability-Adjusted Life Years)_rank`)
le_comp <- read_csv('https://raw.githubusercontent.com/psychty/gbd_2019/ecd33659ad73f41d90e9296cc3d55da3555e420d/Source_files/Raw/Life_expectancy_SE_2019.csv') %>%
filter(location %in% c('West Sussex','England','South East England')) %>%
filter(year == 2019) %>%
# filter(sex != 'Both') %>%
filter(age == '<1 year') %>%
select(sex, location, val) %>%
mutate(val = round(val, 1)) %>%
pivot_wider(values_from = val,
names_from = location)
hale_comp <- read_csv('https://raw.githubusercontent.com/psychty/gbd_2019/ecd33659ad73f41d90e9296cc3d55da3555e420d/Source_files/Raw/Health_Adjusted_Life_expectancy_SE_2019.csv') %>%
filter(location %in% c('West Sussex','England','South East England')) %>%
filter(year == 2019) %>%
# filter(sex != 'Both') %>%
filter(age == '<1 year') %>%
select(sex, location, val) %>%
mutate(val = round(val, 1)) %>%
pivot_wider(values_from = val,
names_from = location)
population_df <- fromJSON(paste0(output_directory, '/wsx_population.json'))
wsx_compare %>%
filter(Year == 2019) %>%
filter(Sex == 'Both') %>%
filter(Cause == 'All causes') %>%
# filter(Cause %in% c('All causes', 'Communicable, maternal, neonatal, and nutritional diseases', 'Non-communicable diseases','Injuries')) %>%
view()
library(easypackages)
libraries(c("readxl", "readr", "plyr", "dplyr", "ggplot2", "png", "tidyverse", "reshape2", "scales", "viridis", "rgdal", "officer", "flextable", "tmaptools", "lemon", "fingertipsR", "jsonlite"))
setwd('~/GitHub/gbd_2019/')
data_directory <- './Source_files/Raw'
output_directory <- './Outputs'
meta_directory <- './Source_files'
# download.file('http://ghdx.healthdata.org/sites/default/files/ihme_query_tool/IHME_GBD_2019_CODEBOOK.zip', destfile = paste0(meta_directory, '/codebook.zip'), mode = 'wb')
# unzip(paste0(meta_directory, '/codebook.zip'), exdir = meta_directory)
list.files('./Source_files')
codebook <- read_csv(paste0(meta_directory,'/IHME_GBD_2019_CODEBOOK_Y2020M11D25.csv'))
cause_hierarchy <- read_excel(paste0(meta_directory, '/IHME_GBD_2019_CAUSE_HIERARCHY_Y2020M11D25.xlsx'))
wsx_df <- unique(list.files("~/gbd_data")[grepl("Cause_", list.files("~/gbd_data")) == TRUE]) %>%
map_df(~read_csv(paste0("~/gbd_data/",.)))
unique(wsx_df$measure_name)
wsx_yll <- wsx_df %>%
filter(measure_name == 'YLLs (Years of Life Lost)')
wsx_daly <- wsx_df %>%
filter(measure_name == 'DALYs (Disability-Adjusted Life Years)')
wsx_yld <- wsx_df %>%
filter(measure_name == 'YLDs (Years Lived with Disability)')
wsx_deaths <- wsx_df %>%
filter(measure_name == 'Deaths')
wsx_incidence <- wsx_df %>%
filter(measure_name == 'Incidence')
wsx_prevalence <- wsx_df %>%
filter(measure_name == 'Prevalence')
nrow(wsx_yll) + nrow(wsx_daly) + nrow(wsx_yld) + nrow(wsx_deaths) + nrow(wsx_incidence) + nrow(wsx_prevalence)
wsx_df %>%
select(measure_name, location_name, sex_name, age_name, cause_id, cause_name, metric_name, year, val) %>%
rename(Name = location_name,
Sex = sex_name,
Age = age_name,
Cause = cause_name,
Year = year,
Measure = measure_name) %>%
left_join(cause_hierarchy[c('Cause ID', 'Level')], by = c('cause_id' = 'Cause ID')) %>%
filter(Level == 2) %>%
filter(Age == 'All Ages') %>%
pivot_wider(names_from = 'metric_name',
values_from = 'val') %>%
group_by(Measure, Name, Sex, Age, Year) %>%
mutate(Number_rank = rank(desc(Number))) %>%
filter(Number_rank <= 10) %>%
toJSON() %>%
write_lines(paste0(output_directory, '/top_ten_wsx.json'))
# Life expectancy
le_raw <- read_csv('https://raw.githubusercontent.com/psychty/gbd_2019/ecd33659ad73f41d90e9296cc3d55da3555e420d/Source_files/Raw/Life_expectancy_SE_2019.csv')
hale_raw <- read_csv('https://raw.githubusercontent.com/psychty/gbd_2019/ecd33659ad73f41d90e9296cc3d55da3555e420d/Source_files/Raw/Health_Adjusted_Life_expectancy_SE_2019.csv')
le_raw %>%
filter(location == 'South East England') %>%
filter(year %in% c(1990, 2019)) %>%
filter(sex != 'Both') %>%
filter(age == '<1 year') %>%
select(sex, year, val) %>%
pivot_wider(values_from = val,
names_from = year)
le_wsx <- le_raw %>%
filter(location == 'West Sussex') %>%
filter(age == '<1 year') %>%
select(location, sex, year, val) %>%
rename(Name = location,
Sex = sex,
Year = year,
LE = val)
hale_wsx <- hale_raw %>%
filter(location == 'West Sussex') %>%
filter(age == '<1 year') %>%
select(location, sex, year, val) %>%
rename(Name = location,
Sex = sex,
Year = year,
HALE = val)
le_wsx %>%
left_join(hale_wsx, by = c('Name', 'Sex', 'Year')) %>%
mutate(Sub_optimal_health = LE - HALE) %>%
toJSON() %>%
write_lines(paste0(output_directory, '/le_wsx.json'))
# Population ####
population_df <- unique(list.files("~/gbd_data/Population")) %>%
map_df(~read_csv(paste0("~/gbd_data/Population/",.))) %>%
select(location_name, sex_name, age_group_name, year_id, val, upper, lower) %>%
filter(location_name == 'West Sussex') %>%
filter(age_group_name %in% c('Early Neonatal', 'Late Neonatal', 'Post Neonatal', '1 to 4', '5 to 9', "10 to 14","15 to 19","20 to 24", "25 to 29","30 to 34","35 to 39","40 to 44", "45 to 49", "50 to 54", "55 to 59", "60 to 64", "65 to 69", "70 to 74", "75 to 79", "80 plus",'All Ages'))
